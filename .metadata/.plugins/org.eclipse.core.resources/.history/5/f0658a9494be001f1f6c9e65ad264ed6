-- 집합

-- 결과 6개 행
SELECT	*
FROM 	emp
WHERE 	deptno = 30;

-- 결과 3개 행
SELECT 	*
FROM 	EMP
WHERE 	deptno = 10;

-- emp 테이블에서 deptno가 30 또는 10인 테이블 조회
-- 두 테이블을 union(합집합)으로 연결한다
SELECT 	*
FROM 	emp
WHERE	deptno = 30
UNION	all
SELECT 	*
FROM 	emp
WHERE 	deptno = 10
;

-- emp 테이블에서 sal 1000 이상 2000 이하, 1500이상 3000이하의 결과를 같이 조회
SELECT 	*
FROM	emp
WHERE 	sal BETWEEN 1000 AND 2000
UNION
SELECT 	*
FROM 	emp
WHERE 	sal	BETWEEN 1500 AND 3000
;

SELECT * FROM emp;
SELECT * FROM dept;

-- 오류 : 열의 수가 다르면 union을 사용할 수 없다
SELECT 	*
FROM 	emp
UNION
SELECT	*
from	dept
;

-- 오류 : 열의 타입이 다르면 union 을 사용할 수 없다
SELECT 	empno
	  , deptno
	  , job
FROM	emp
UNION
SELECT	*
FROM 	dept
;

-- 열의 수와 타입이 일치한다면 union이 가능하다
SELECT	sal
	  , ename
	  , job
FROM	emp
UNION
SELECT	*
FROM	dept
;

-- 위쪽 쿼리에 별칭을 주면 결과 테이블의 옆 이름으로 사용된다
SELECT 	deptno 숫자
	  , dname 문자
	  , loc 문자
FROM	dept
UNION
SELECT	sal
	  , ename
	  , job
FROM	emp
;

-- union이 두 테이블 합치고 order by가 실행되므로
-- 합쳐지기 이전의 컬럼이나 소속을 이용해도 정렬되지 않는다
SELECT	empno 번호
	  , ename 이름
	  , job 직장
FROM	emp e
UNION
SELECT	*
FROM 	dept d
ORDER BY 이름
--ORDER BY ename  -- 별칭을 만들어줬기 때문에 별칭을 사용해야 한다
;

SELECT * FROM emp;
SELECT * FROM dept;

-- 교집합
SELECT 	player_name "이름"
	  , team_id "팀"
	  , height "키"
	  , weight "몸무게"
FROM	player
WHERE 	height BETWEEN 185 AND 186
INTERSECT
SELECT 	player_name "이름"
	  , team_id "팀"
	  , height "키"
	  , weight "몸무게"
FROM	player
WHERE 	weight BETWEEN 76 AND 78
;

-- 차집합
SELECT 	player_name "이름"
	  , team_id "팀"
	  , height "키"
	  , weight "몸무게"
FROM	player
WHERE 	height BETWEEN 185 AND 186
MINUS
SELECT 	player_name "이름"
	  , team_id "팀"
	  , height "키"
	  , weight "몸무게"
FROM	player
WHERE 	weight BETWEEN 76 AND 78
;

SELECT * FROM player;

-- 형 변환 함수
-- TO_CHAR()
SELECT 	sysdate
FROM	dual;

SELECT 	to_char(sysdate, 'yyyy/mm/dd')
FROM	dual
;

SELECT 	to_char(sysdate, 'yyyy"년 "mm"월 "dd"일"') "오늘 날짜"
FROM	dual
;

SELECT 	to_char(sysdate, 'YYYY/MM/DD-HH24:MI')
FROM	dual
;

-- to_number()
SELECT 	'1234'
	  , to_number('1234')
FROM	dual
;

-- view