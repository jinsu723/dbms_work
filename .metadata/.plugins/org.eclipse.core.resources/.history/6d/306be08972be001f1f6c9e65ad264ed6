-- 네부조인

-- 도서 테이블과 도서 가격 테이블
--CREATE 	TABLE tbl_books()
--	book_id		NUMBER
--  ,	book_title	varchar2(1000)
--  , book_author	varchar2(100)
--  , CONSTRAINT book_pk PRIMARY KEY(book_id)
--;

CREATE TABLE TBL_BOOKS(
   BOOK_ID NUMBER,
   BOOK_TITLE VARCHAR2(1000),
   BOOK_AUTHOR VARCHAR2(100),
   CONSTRAINT BOOK_PK PRIMARY KEY(BOOK_ID)
);

CREATE TABLE tbl_bookprice(
	bp_id		NUMBER
  , bp_price	NUMBER
  , CONSTRAINT bp_pk PRIMARY key(bp_id)
);

DROP TABLE tbl_bookprice;
-- 값 추가
INSERT INTO tbl_books
--values(1, '위대한 개츠비', 'F.스콧 피츠재럴드');
--values(2, '해리포터와 마법사의 돌', 'J.K. 롤링');
--values(3, '1984', '조지오웰');
--values(4, '오만과 편견', '제인 오스틴');
--values(5, '데미안', '헤르만헤세');
--VALUES(6, '모모', '미하엘 엔더');

INSERT INTO tbl_bookprice
--values(1, 15000);
--VALUES(2, 18000);
--values(3, 14000);
--values(4, 17000);
--VALUES(5, 18000);
--values(6, 20000);
--values(7, 20000);

-- 2개의 테이블 내부조인
SELECT 	A.book_id
	  , A.book_title
	  , A.book_author
	  , B.bp_id
	  , B.bp_price
FROM	tbl_books A INNER JOIN tbl_bookprice B
ON		A.book_id = B.bp_id;

DROP TABLE tbl_books;
DROP TABLE tbl_bookprice;

-- 도서관
-- 도서 테이블, 회원 테이블, 렌탈 테이블
CREATE 	TABLE tbl_books(
	book_id		NUMBER
  ,	book_title	varchar2(1000)
  , book_author	varchar2(100)
  , CONSTRAINT book_pk PRIMARY KEY(book_id)
);

SELECT 	*
FROM 	tbl_books
;

CREATE TABLE tbl_member(
	mem_id		NUMBER
  , mem_name	varchar2(100)
  , mem_phone	varchar2(100)
  , mem_email	varchar2(100)
  , CONSTRAINT member_pk PRIMARY key(mem_id)
);

SELECT 	*
FROM 	tbl_member
;

CREATE TABLE tbl_rental(
	ren_id	NUMBER
  , mem_id	NUMBER
  , book_id	NUMBER
  , ren_rentaldate	DATE
  , ren_returndate	DATE
  , CONSTRAINT pk_rental PRIMARY key(ren_id)
  , CONSTRAINT fk_rental FOREIGN KEY(mem_id) REFERENCES tbl_member(mem_id)
  , CONSTRAINT fk_rental_book FOREIGN key(book_id) REFERENCES tbl_books(book_id)
);

SELECT 	*
FROM 	tbl_rental
;